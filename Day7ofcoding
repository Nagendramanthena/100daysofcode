class Solution {
    public int threeSumClosest(int[] nums, int target) {
        int result = Integer.MAX_VALUE;
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            int a_pointer = i+1;
            int b_pointer = nums.length-1;
            while(a_pointer<b_pointer){
                int sum = nums[i]+nums[a_pointer]+nums[b_pointer];
                if(sum>target){
                    b_pointer--;
                    
                }
                else{
                    a_pointer++;
                }
                if(Math.abs(sum-target)<Math.abs(result-target)){
                    result = sum;
                }
                }
            }
          
        return result;
    }
}

class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        ArrayList<List<Integer> > result
            = new ArrayList<List<Integer> >();
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            for(int j=i+1;j<nums.length-2;j++){
               int a_pointer = j+1;
               int b_pointer =  nums.length-1;
                while(a_pointer<b_pointer){
                    int current_sum  = nums[i]+nums[j]+nums[a_pointer]+nums[b_pointer];
                    if(current_sum>target){
                        b_pointer--;
                    }
                    else if(current_sum == target){
                        List<Integer> list1
                             = new ArrayList<Integer>();
                        list1.add(nums[i]);list1.add(nums[j]);list1.add(nums[a_pointer]);
                        list1.add(nums[b_pointer]);
                        if(!result.contains(list1) && current_sum!=-294967296){
                            result.add(list1);
                        }
                        a_pointer++;
                        b_pointer--;
                    }
                    else{
                        a_pointer++;
                    }
                }
            }
            
          
            
            
        }
        return result;
    }
}
